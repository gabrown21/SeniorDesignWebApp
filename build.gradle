plugins {
	id 'java'
	id 'org.jetbrains.kotlin.jvm' version '1.9.0'
	id 'com.adarshr.test-logger' version '4.0.0'
	id 'pmd'
	id "com.diffplug.spotless" version "7.0.0.BETA1"
}

pmd {
	consoleOutput = true
	toolVersion = "7.0.0"

	pmdMain {
		rulesMinimumPriority = 4
		ruleSets = [
//				"category/java/design.xml/AvoidDeeplyNestedIfStmts",
//				"category/java/design.xml/CollapsibleIfStatements",
//				"category/java/design.xml/CognitiveComplexity",
//				"category/java/design.xml/CyclomaticComplexity",
//				"category/java/bestpractices.xml/UnusedLocalVariable",
//				"category/java/codestyle.xml/ShortVariable",
//				"category/java/codestyle.xml/UseDiamondOperator",
//				"category/java/errorprone.xml/BrokenNullCheck",
//				"category/java/errorprone.xml/CloseResource",
//				"category/java/errorprone.xml/CompareObjectsWithEquals",
//				"category/java/errorprone.xml/ReturnEmptyCollectionRatherThanNull",
				"category/java/performance.xml/AvoidArrayLoops"
		]
//		ruleSetFiles(files("pmdruleset.xml"))
	}

	pmdTest {
		rulesMinimumPriority = 1
		ruleSets = [
				"category/java/performance.xml/AvoidArrayLoops",
		]
	}
}

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/main'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		googleJavaFormat()
	}
}

group = 'edu.bu'
version = '1.0-SNAPSHOT'

repositories {
	mavenCentral()
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
	testImplementation 'org.mockito:mockito-core:5.12.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
	implementation 'io.finnhub:kotlin-client:2.0.20'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation 'org.java-websocket:Java-WebSocket:1.5.6'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'com.google.guava:guava:33.2.1-jre'
	pmd 'net.sourceforge.pmd:pmd-ant:7.0.0'
	pmd 'net.sourceforge.pmd:pmd-java:7.0.0'
	implementation 'org.tinylog:tinylog-api:2.6.2'
	implementation 'org.tinylog:tinylog-impl:2.6.2'
}

test {
	useJUnitPlatform {
		excludeTags "IntegrationTest"
		excludeTags "Probe"
	}

	// Always run tests, even when nothing changed.
	dependsOn 'cleanTest'

	// Show test results.
	testLogging {
		events "passed", "skipped", "failed"
	}
}

task runServer(type: JavaExec) {
	mainClass = 'edu.bu.StockAppServer'
	classpath = sourceSets.main.runtimeClasspath
}

task runServerWithMockFinhub(type: JavaExec) {
	mainClass = 'edu.bu.StockAppServer'
	classpath = sourceSets.main.runtimeClasspath
	args = ["mockFinhub"]
}

// call this with --debug-jvm to have it start and wait for a debugger (IntelliJ) to be attached to it
task runServerWithMockFinhubPreload(type: JavaExec) {
	mainClass = 'edu.bu.StockAppServer'
	classpath = sourceSets.main.runtimeClasspath
	args = ["mockFinhub", "msBetweenCalls=10"]
}

task executeServerIntegrationTest(type: Test) {
	useJUnitPlatform {
		includeTags "IntegrationTest"
	}
}

kotlin {
	jvmToolchain(11)
}
